import{j as e}from"./jsx-runtime-Bxcv0yjW.js";import{c as g}from"./index-Bl6ORisp.js";import{r as c,R as y}from"./index-mfbfsM12.js";import{L as x}from"./label-aifmuN2d.js";import{H as q}from"./helper-text-BGGx8P4c.js";import{E as V}from"./error-messages-B09LlTSG.js";const f=({id:t=void 0,required:s,label:n,helperText:l,errors:a,validationStatus:u,className:d,fieldControl:r,children:i})=>{const o=g("usa-form-group",{"usa-form-group--error":!!(a&&a.length>0)||u==="error"},d);if(!i&&!r)return e.jsx(e.Fragment,{});if(i)return e.jsx("div",{id:t,className:o,children:i});const p=c.isValidElement(r)?r.props.id:void 0,m=c.isValidElement(r)?y.cloneElement(r,{"aria-describedby":`${t}-helper-text`}):void 0;return e.jsxs("div",{id:t,className:o,children:[n?e.jsx(x,{htmlFor:p,required:s,children:n}):e.jsx(e.Fragment,{}),l?e.jsx(q,{id:`${t}-helper-text`,children:l}):e.jsx(e.Fragment,{}),a?e.jsx(V,{id:`${t}-errors`,errors:a}):e.jsx(e.Fragment,{}),m]})};try{f.displayName="FormGroup",f.__docgenInfo={description:"A wrapper for form elements used to provide validation formatting.",displayName:"FormGroup",props:{id:{defaultValue:{value:"undefined"},description:"The unique identifier for this component",name:"id",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"A boolean indicating whether or not the field is required",name:"required",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label text to display with the input",name:"label",required:!1,type:{name:"string"}},helperText:{defaultValue:null,description:"Helper text to display with the input",name:"helperText",required:!1,type:{name:"string"}},errors:{defaultValue:null,description:"An array of string error messages",name:"errors",required:!1,type:{name:"string | string[]"}},validationStatus:{defaultValue:null,description:"State based styling to apply to the form group",name:"validationStatus",required:!1,type:{name:"ValidationStatus"}},className:{defaultValue:null,description:"Additional class name for the form group",name:"className",required:!1,type:{name:"string"}},fieldControl:{defaultValue:null,description:"The contents of the form group",name:"fieldControl",required:!1,type:{name:"ReactNode"}},children:{defaultValue:null,description:"The contents of the form group",name:"children",required:!1,type:{name:"ReactNode"}}}}}catch{}try{formgroup.displayName="formgroup",formgroup.__docgenInfo={description:"A wrapper for form elements used to provide validation formatting.",displayName:"formgroup",props:{id:{defaultValue:{value:"undefined"},description:"The unique identifier for this component",name:"id",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"A boolean indicating whether or not the field is required",name:"required",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label text to display with the input",name:"label",required:!1,type:{name:"string"}},helperText:{defaultValue:null,description:"Helper text to display with the input",name:"helperText",required:!1,type:{name:"string"}},errors:{defaultValue:null,description:"An array of string error messages",name:"errors",required:!1,type:{name:"string | string[]"}},validationStatus:{defaultValue:null,description:"State based styling to apply to the form group",name:"validationStatus",required:!1,type:{name:"ValidationStatus"}},className:{defaultValue:null,description:"Additional class name for the form group",name:"className",required:!1,type:{name:"string"}},fieldControl:{defaultValue:null,description:"The contents of the form group",name:"fieldControl",required:!1,type:{name:"ReactNode"}},children:{defaultValue:null,description:"The contents of the form group",name:"children",required:!1,type:{name:"ReactNode"}}}}}catch{}const h=({id:t,name:s,rows:n,required:l,label:a,helperText:u,errors:d,validationStatus:r,className:i,onChange:o,...p})=>{const m=g("usa-textarea",{"usa-input--error":r==="error","usa-input--success":r==="success"},i);return e.jsx(f,{id:`form-group-${t}`,required:l,label:a,helperText:u,errors:d,validationStatus:r,fieldControl:e.jsx("textarea",{className:m,style:n===void 0?void 0:{height:"unset"},id:t,name:s,rows:n,onChange:o,...p})})};try{h.displayName="TextArea",h.__docgenInfo={description:"A text area allows users to enter any combination of letters, numbers, or symbols.",displayName:"TextArea",props:{id:{defaultValue:null,description:"The unique identifier for the textarea",name:"id",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"The name of the textarea",name:"name",required:!1,type:{name:"string"}},rows:{defaultValue:null,description:"The number of rows to render for the textarea",name:"rows",required:!1,type:{name:"number"}},required:{defaultValue:null,description:"A boolean indicating whether or not the field is required",name:"required",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label text to display with the input",name:"label",required:!1,type:{name:"string"}},helperText:{defaultValue:null,description:"Helper text to display with the input",name:"helperText",required:!1,type:{name:"string"}},errors:{defaultValue:null,description:"An array of string error messages",name:"errors",required:!1,type:{name:"string | string[]"}},validationStatus:{defaultValue:null,description:"State based styling to apply to the form group",name:"validationStatus",required:!1,type:{name:"ValidationStatus"}},onChange:{defaultValue:null,description:"Event handler for when value of textarea is changes",name:"onChange",required:!1,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}}}}}catch{}try{textarea.displayName="textarea",textarea.__docgenInfo={description:"A text area allows users to enter any combination of letters, numbers, or symbols.",displayName:"textarea",props:{id:{defaultValue:null,description:"The unique identifier for the textarea",name:"id",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"The name of the textarea",name:"name",required:!1,type:{name:"string"}},rows:{defaultValue:null,description:"The number of rows to render for the textarea",name:"rows",required:!1,type:{name:"number"}},required:{defaultValue:null,description:"A boolean indicating whether or not the field is required",name:"required",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label text to display with the input",name:"label",required:!1,type:{name:"string"}},helperText:{defaultValue:null,description:"Helper text to display with the input",name:"helperText",required:!1,type:{name:"string"}},errors:{defaultValue:null,description:"An array of string error messages",name:"errors",required:!1,type:{name:"string | string[]"}},validationStatus:{defaultValue:null,description:"State based styling to apply to the form group",name:"validationStatus",required:!1,type:{name:"ValidationStatus"}},onChange:{defaultValue:null,description:"Event handler for when value of textarea is changes",name:"onChange",required:!1,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}}}}}catch{}export{f as F,h as T};
