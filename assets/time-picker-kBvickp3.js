import{j as M}from"./jsx-runtime-D_zvdyIk.js";import{c as R}from"./index-DFtWylL1.js";import{r as S}from"./index-CtQTiInQ.js";import{r as H,c as w}from"./index-BKt2X7Zg.js";import{g as j}from"./_commonjsHelpers-Cpj98o6Y.js";import{r as B,a as O}from"./config-jVN7-cmM.js";import{a as Q}from"./select-or-matches-Ry_FXvm3.js";import{F as D}from"./form-group-C5iO4eEf.js";var A,L;function K(){if(L)return A;L=1;const l=B(),q=Q(),{prefix:E}=O(),{COMBO_BOX_CLASS:x,enhanceComboBox:_}=H(),u=`.${`${E}-time-picker`}`,p=60*24-1,c=0,o=30,g=1,m={filter:"0?{{ hourQueryFilter }}:{{minuteQueryFilter}}.*{{ apQueryFilter }}m?",apQueryFilter:"([ap])",hourQueryFilter:"([1-9][0-2]?)",minuteQueryFilter:"[\\d]+:([0-9]{0,2})"},a=r=>{let e;if(r){const[n,d]=r.split(":").map(f=>{let y;const b=parseInt(f,10);return Number.isNaN(b)||(y=b),y});n!=null&&d!=null&&(e=n*60+d)}return e},i=r=>{const e=r.closest(u),n=e.querySelector("input");if(!n)throw new Error(`${u} is missing inner input`);const d=document.createElement("select");["id","name","required","aria-label","aria-labelledby","disabled","aria-disabled"].forEach(t=>{if(n.hasAttribute(t)){const s=n.getAttribute(t);d.setAttribute(t,s),n.removeAttribute(t)}});const f=(t,s)=>`0000${t}`.slice(-s),y=t=>{const s=t%60,h=Math.floor(t/60),V=h%12||12,I=h<12?"am":"pm";return{minute:s,hour24:h,hour12:V,ampm:I}},b=Math.max(c,a(e.dataset.minTime)||c),P=Math.min(p,a(e.dataset.maxTime)||p),$=Math.floor(Math.max(g,e.dataset.step||o));let C;for(let t=b;t<=P;t+=$){const{minute:s,hour24:h,hour12:V,ampm:I}=y(t),T=document.createElement("option");T.value=`${f(h,2)}:${f(s,2)}`,T.text=`${V}:${f(s,2)}${I}`,T.text===n.value&&(C=T.value),d.appendChild(T)}e.classList.add(x),Object.keys(m).forEach(t=>{e.dataset[t]=m[t]}),e.dataset.disableFiltering="true",e.dataset.defaultValue=C,e.appendChild(d),n.remove()};return A=l({},{init(r){q(u,r).forEach(e=>{i(e),_(e)})},FILTER_DATASET:m}),A}var X=K();const N=j(X),F=({id:l,required:q,label:E,helperText:x,errors:_,filter:v,minTime:u,maxTime:p,step:c,onChange:o,...g})=>{const m=S.useRef(null);S.useLayoutEffect(()=>{var r;const i=m.current,k=(r=i==null?void 0:i.parentNode)==null?void 0:r.querySelector(`label[for="${l}"]`);if(k){N.on(i),w.on(i);const e=i.querySelector(".usa-combo-box__input");o&&e.addEventListener("change",o)}return()=>{if(k){w.off(i),N.off(i);const e=i.querySelector(".usa-combo-box__input");o&&e.removeEventListener("change",o)}}});const a={};return v&&(a["data-filter"]=v),u&&(a["data-min-time"]=u),p&&(a["data-max-time"]=p),c&&(a["data-step"]=c),M.jsx(D,{id:`form-group-${l}`,required:q,label:E,helperText:x,errors:_,fieldControl:M.jsx("div",{ref:m,className:R("usa-time-picker",g.className),...a,children:M.jsx("input",{className:"usa-input",type:"text",id:l,...g})})})};try{F.displayName="TimePicker",F.__docgenInfo={description:"A time picker helps users select a specific time.",displayName:"TimePicker",props:{id:{defaultValue:null,description:"The unique identifier for the input",name:"id",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"The name of the input",name:"name",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"A boolean indicating whether or not the field is required",name:"required",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label text to display with the input",name:"label",required:!1,type:{name:"string"}},helperText:{defaultValue:null,description:"Helper text to display with the input",name:"helperText",required:!1,type:{name:"string"}},errors:{defaultValue:null,description:"An array of string error messages",name:"errors",required:!1,type:{name:"string | string[]"}},filter:{defaultValue:null,description:"The time picker will use this regular expression to filter the time picker options.",name:"filter",required:!1,type:{name:"string"}},minTime:{defaultValue:null,description:"The start time used in the time picker in hh:mm 24-hour format. The default is 00:00.",name:"minTime",required:!1,type:{name:"string"}},maxTime:{defaultValue:null,description:"The end time used for the time picker in hh:mm 24-hour format. The default is 23:59.",name:"maxTime",required:!1,type:{name:"string"}},step:{defaultValue:null,description:"The number of minutes between options. The minimum is 1 minute and the default is 30 minutes.",name:"step",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Event handler will be triggered when the time-picker value changes",name:"onChange",required:!1,type:{name:"(((this: HTMLInputElement, event: Event) => void) & ChangeEventHandler<HTMLInputElement>)"}}}}}catch{}try{timepicker.displayName="timepicker",timepicker.__docgenInfo={description:"A time picker helps users select a specific time.",displayName:"timepicker",props:{id:{defaultValue:null,description:"The unique identifier for the input",name:"id",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"The name of the input",name:"name",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"A boolean indicating whether or not the field is required",name:"required",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label text to display with the input",name:"label",required:!1,type:{name:"string"}},helperText:{defaultValue:null,description:"Helper text to display with the input",name:"helperText",required:!1,type:{name:"string"}},errors:{defaultValue:null,description:"An array of string error messages",name:"errors",required:!1,type:{name:"string | string[]"}},filter:{defaultValue:null,description:"The time picker will use this regular expression to filter the time picker options.",name:"filter",required:!1,type:{name:"string"}},minTime:{defaultValue:null,description:"The start time used in the time picker in hh:mm 24-hour format. The default is 00:00.",name:"minTime",required:!1,type:{name:"string"}},maxTime:{defaultValue:null,description:"The end time used for the time picker in hh:mm 24-hour format. The default is 23:59.",name:"maxTime",required:!1,type:{name:"string"}},step:{defaultValue:null,description:"The number of minutes between options. The minimum is 1 minute and the default is 30 minutes.",name:"step",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Event handler will be triggered when the time-picker value changes",name:"onChange",required:!1,type:{name:"(((this: HTMLInputElement, event: Event) => void) & ChangeEventHandler<HTMLInputElement>)"}}}}}catch{}export{F as T};
