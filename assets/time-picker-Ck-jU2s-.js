import{j as g}from"./jsx-runtime-Bxcv0yjW.js";import{c as M}from"./index-Bl6ORisp.js";import{r as E}from"./index-mfbfsM12.js";import{s as I,c as x}from"./index-Da4cx7Kx.js";import{g as A}from"./_commonjsHelpers-BosuxZz1.js";import{b as w,c as L}from"./config-BXli1stc.js";import{s as $}from"./select-or-matches-BLLALKpn.js";import{F as C}from"./form-group-BYOOw0zj.js";const N=w,F=$,{prefix:P}=L,{COMBO_BOX_CLASS:S,enhanceComboBox:H}=I,j=`${P}-time-picker`,y=`.${j}`,q=60*24-1,_=0,R=30,O=1,b={filter:"0?{{ hourQueryFilter }}:{{minuteQueryFilter}}.*{{ apQueryFilter }}m?",apQueryFilter:"([ap])",hourQueryFilter:"([1-9][0-2]?)",minuteQueryFilter:"[\\d]+:([0-9]{0,2})"},v=r=>{let t;if(r){const[n,l]=r.split(":").map(u=>{let m;const d=parseInt(u,10);return Number.isNaN(d)||(m=d),m});n!=null&&l!=null&&(t=n*60+l)}return t},Q=r=>{const t=r.closest(y),n=t.querySelector("input");if(!n)throw new Error(`${y} is missing inner input`);const l=document.createElement("select");["id","name","required","aria-label","aria-labelledby","disabled","aria-disabled"].forEach(e=>{if(n.hasAttribute(e)){const a=n.getAttribute(e);l.setAttribute(e,a),n.removeAttribute(e)}});const u=(e,a)=>`0000${e}`.slice(-a),m=e=>{const a=e%60,s=Math.floor(e/60),i=s%12||12,c=s<12?"am":"pm";return{minute:a,hour24:s,hour12:i,ampm:c}},d=Math.max(_,v(t.dataset.minTime)||_),f=Math.min(q,v(t.dataset.maxTime)||q),h=Math.floor(Math.max(O,t.dataset.step||R));let p;for(let e=d;e<=f;e+=h){const{minute:a,hour24:s,hour12:i,ampm:c}=m(e),o=document.createElement("option");o.value=`${u(s,2)}:${u(a,2)}`,o.text=`${i}:${u(a,2)}${c}`,o.text===n.value&&(p=o.value),l.appendChild(o)}t.classList.add(S),Object.keys(b).forEach(e=>{t.dataset[e]=b[e]}),t.dataset.disableFiltering="true",t.dataset.defaultValue=p,t.appendChild(l),n.remove()},B=N({},{init(r){F(y,r).forEach(t=>{Q(t),H(t)})},FILTER_DATASET:b});var D=B;const k=A(D),V=({id:r,required:t,label:n,helperText:l,errors:u,filter:m,minTime:d,maxTime:f,step:h,onChange:p,...e})=>{const a=E.useRef(null);E.useLayoutEffect(()=>{var o;const i=a.current,c=(o=i==null?void 0:i.parentNode)==null?void 0:o.querySelector(`label[for="${r}"]`);if(c){k.on(i),x.on(i);const T=i.querySelector(".usa-combo-box__input");p&&T.addEventListener("change",p)}return()=>{if(c){x.off(i),k.off(i);const T=i.querySelector(".usa-combo-box__input");p&&T.removeEventListener("change",p)}}});const s={};return m&&(s["data-filter"]=m),d&&(s["data-min-time"]=d),f&&(s["data-max-time"]=f),h&&(s["data-step"]=h),g.jsx(C,{id:`form-group-${r}`,required:t,label:n,helperText:l,errors:u,fieldControl:g.jsx("div",{ref:a,className:M("usa-time-picker",e.className),...s,children:g.jsx("input",{className:"usa-input",type:"text",id:r,...e})})})};try{V.displayName="TimePicker",V.__docgenInfo={description:"A time picker helps users select a specific time.",displayName:"TimePicker",props:{id:{defaultValue:null,description:"The unique identifier for the input",name:"id",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"The name of the input",name:"name",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"A boolean indicating whether or not the field is required",name:"required",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label text to display with the input",name:"label",required:!1,type:{name:"string"}},helperText:{defaultValue:null,description:"Helper text to display with the input",name:"helperText",required:!1,type:{name:"string"}},errors:{defaultValue:null,description:"An array of string error messages",name:"errors",required:!1,type:{name:"string | string[]"}},filter:{defaultValue:null,description:"The time picker will use this regular expression to filter the time picker options.",name:"filter",required:!1,type:{name:"string"}},minTime:{defaultValue:null,description:"The start time used in the time picker in hh:mm 24-hour format. The default is 00:00.",name:"minTime",required:!1,type:{name:"string"}},maxTime:{defaultValue:null,description:"The end time used for the time picker in hh:mm 24-hour format. The default is 23:59.",name:"maxTime",required:!1,type:{name:"string"}},step:{defaultValue:null,description:"The number of minutes between options. The minimum is 1 minute and the default is 30 minutes.",name:"step",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Event handler will be triggered when the time-picker value changes",name:"onChange",required:!1,type:{name:"((this: HTMLInputElement, event: Event) => void) & ChangeEventHandler<HTMLInputElement>"}}}}}catch{}try{timepicker.displayName="timepicker",timepicker.__docgenInfo={description:"A time picker helps users select a specific time.",displayName:"timepicker",props:{id:{defaultValue:null,description:"The unique identifier for the input",name:"id",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"The name of the input",name:"name",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"A boolean indicating whether or not the field is required",name:"required",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label text to display with the input",name:"label",required:!1,type:{name:"string"}},helperText:{defaultValue:null,description:"Helper text to display with the input",name:"helperText",required:!1,type:{name:"string"}},errors:{defaultValue:null,description:"An array of string error messages",name:"errors",required:!1,type:{name:"string | string[]"}},filter:{defaultValue:null,description:"The time picker will use this regular expression to filter the time picker options.",name:"filter",required:!1,type:{name:"string"}},minTime:{defaultValue:null,description:"The start time used in the time picker in hh:mm 24-hour format. The default is 00:00.",name:"minTime",required:!1,type:{name:"string"}},maxTime:{defaultValue:null,description:"The end time used for the time picker in hh:mm 24-hour format. The default is 23:59.",name:"maxTime",required:!1,type:{name:"string"}},step:{defaultValue:null,description:"The number of minutes between options. The minimum is 1 minute and the default is 30 minutes.",name:"step",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Event handler will be triggered when the time-picker value changes",name:"onChange",required:!1,type:{name:"((this: HTMLInputElement, event: Event) => void) & ChangeEventHandler<HTMLInputElement>"}}}}}catch{}export{V as T};
