import{j as r}from"./jsx-runtime-D_zvdyIk.js";import{c}from"./index-BC9Je7_j.js";const a=({id:t,type:n="button",variant:e="default",size:u="default",className:l,children:o,...s})=>{const i=c("usa-button",{"usa-button--secondary":e==="secondary","usa-button--accent-cool":e==="accent-cool","usa-button--accent-warm":e==="accent-warm","usa-button--base":e==="base","usa-button--outline":e==="outline","usa-button--outline usa-button--inverse":e==="outline-inverse","usa-button--unstyled":e==="unstyled","usa-button--big":u==="big"},l);return r.jsx("button",{id:t,type:n,className:i,"data-testid":"button",...s,children:o})};try{a.displayName="Button",a.__docgenInfo={description:"A button draws attention to important actions with a large selectable surface.",displayName:"Button",props:{id:{defaultValue:null,description:"The unique identifier for this component",name:"id",required:!1,type:{name:"string"}},type:{defaultValue:{value:"button"},description:"The type of button to display",name:"type",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"reset"'},{value:'"submit"'}]}},variant:{defaultValue:{value:"default"},description:"The style variant of button to display",name:"variant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"secondary"'},{value:'"accent-cool"'},{value:'"accent-warm"'},{value:'"base"'},{value:'"outline"'},{value:'"outline-inverse"'},{value:'"unstyled"'}]}},size:{defaultValue:{value:"default"},description:"The size of the button",name:"size",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"big"'}]}},className:{defaultValue:null,description:"A custom class to apply to the component",name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Custom callback for when button is clicked",name:"onClick",required:!1,type:{name:"(((param: SyntheticEvent<Element, Event>) => void) & MouseEventHandler<HTMLButtonElement>)"}},children:{defaultValue:null,description:"The contents of the button",name:"children",required:!1,type:{name:"ReactNode"}}}}}catch{}try{button.displayName="button",button.__docgenInfo={description:"A button draws attention to important actions with a large selectable surface.",displayName:"button",props:{id:{defaultValue:null,description:"The unique identifier for this component",name:"id",required:!1,type:{name:"string"}},type:{defaultValue:{value:"button"},description:"The type of button to display",name:"type",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"reset"'},{value:'"submit"'}]}},variant:{defaultValue:{value:"default"},description:"The style variant of button to display",name:"variant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"secondary"'},{value:'"accent-cool"'},{value:'"accent-warm"'},{value:'"base"'},{value:'"outline"'},{value:'"outline-inverse"'},{value:'"unstyled"'}]}},size:{defaultValue:{value:"default"},description:"The size of the button",name:"size",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"big"'}]}},className:{defaultValue:null,description:"A custom class to apply to the component",name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Custom callback for when button is clicked",name:"onClick",required:!1,type:{name:"(((param: SyntheticEvent<Element, Event>) => void) & MouseEventHandler<HTMLButtonElement>)"}},children:{defaultValue:null,description:"The contents of the button",name:"children",required:!1,type:{name:"ReactNode"}}}}}catch{}export{a as B};
