import{j as M}from"./jsx-runtime-D_zvdyIk.js";import{c as R}from"./index-CRJmehm-.js";import{g as H,r as S}from"./iframe-C4vNGh7L.js";import{r as j,c as w}from"./index-DZVpAW7Q.js";import{r as B,a as O}from"./config-ODXtjL5r.js";import{a as Q}from"./select-or-matches-DM7yTSmT.js";import{F as D}from"./form-group-DBfTQOoS.js";var A,L;function K(){if(L)return A;L=1;const s=B(),b=Q(),{prefix:q}=O(),{COMBO_BOX_CLASS:x,enhanceComboBox:_}=j(),u=`.${`${q}-time-picker`}`,c=60*24-1,p=0,o=30,g=1,m={filter:"0?{{ hourQueryFilter }}:{{minuteQueryFilter}}.*{{ apQueryFilter }}m?",apQueryFilter:"([ap])",hourQueryFilter:"([1-9][0-2]?)",minuteQueryFilter:"[\\d]+:([0-9]{0,2})"},a=i=>{let t;if(i){const[n,d]=i.split(":").map(f=>{let y;const E=parseInt(f,10);return Number.isNaN(E)||(y=E),y});n!=null&&d!=null&&(t=n*60+d)}return t},r=i=>{const t=i.closest(u),n=t.querySelector("input");if(!n)throw new Error(`${u} is missing inner input`);const d=document.createElement("select");["id","name","required","aria-label","aria-labelledby","disabled","aria-disabled"].forEach(e=>{if(n.hasAttribute(e)){const l=n.getAttribute(e);d.setAttribute(e,l),n.removeAttribute(e)}});const f=(e,l)=>`0000${e}`.slice(-2),y=e=>{const l=e%60,h=Math.floor(e/60),V=h%12||12,I=h<12?"am":"pm";return{minute:l,hour24:h,hour12:V,ampm:I}},E=Math.max(p,a(t.dataset.minTime)||p),F=Math.min(c,a(t.dataset.maxTime)||c),$=Math.floor(Math.max(g,t.dataset.step||o));let C;for(let e=E;e<=F;e+=$){const{minute:l,hour24:h,hour12:V,ampm:I}=y(e),T=document.createElement("option");T.value=`${f(h)}:${f(l)}`,T.text=`${V}:${f(l)}${I}`,T.text===n.value&&(C=T.value),d.appendChild(T)}t.classList.add(x),Object.keys(m).forEach(e=>{t.dataset[e]=m[e]}),t.dataset.disableFiltering="true",t.dataset.defaultValue=C,t.appendChild(d),n.remove()};return A=s({},{init(i){b(u,i).forEach(t=>{r(t),_(t)})},FILTER_DATASET:m}),A}var X=K();const P=H(X),N=({id:s,required:b,label:q,helperText:x,errors:_,filter:k,minTime:u,maxTime:c,step:p,onChange:o,...g})=>{const m=S.useRef(null);S.useLayoutEffect(()=>{const r=m.current,v=r?.parentNode?.querySelector(`label[for="${s}"]`);if(v){P.on(r),w.on(r);const i=r.querySelector(".usa-combo-box__input");o&&i.addEventListener("change",o)}return()=>{if(v){w.off(r),P.off(r);const i=r.querySelector(".usa-combo-box__input");o&&i.removeEventListener("change",o)}}});const a={};return k&&(a["data-filter"]=k),u&&(a["data-min-time"]=u),c&&(a["data-max-time"]=c),p&&(a["data-step"]=p),M.jsx(D,{id:`form-group-${s}`,required:b,label:q,helperText:x,errors:_,fieldControl:M.jsx("div",{ref:m,className:R("usa-time-picker",g.className),...a,children:M.jsx("input",{className:"usa-input",type:"text",id:s,...g})})})};try{N.displayName="TimePicker",N.__docgenInfo={description:"A time picker helps users select a specific time.",displayName:"TimePicker",props:{id:{defaultValue:null,description:"The unique identifier for the input",name:"id",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"The name of the input",name:"name",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"A boolean indicating whether or not the field is required",name:"required",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label text to display with the input",name:"label",required:!1,type:{name:"string"}},helperText:{defaultValue:null,description:"Helper text to display with the input",name:"helperText",required:!1,type:{name:"string"}},errors:{defaultValue:null,description:"An array of string error messages",name:"errors",required:!1,type:{name:"string | string[]"}},filter:{defaultValue:null,description:"The time picker will use this regular expression to filter the time picker options.",name:"filter",required:!1,type:{name:"string"}},minTime:{defaultValue:null,description:"The start time used in the time picker in hh:mm 24-hour format. The default is 00:00.",name:"minTime",required:!1,type:{name:"string"}},maxTime:{defaultValue:null,description:"The end time used for the time picker in hh:mm 24-hour format. The default is 23:59.",name:"maxTime",required:!1,type:{name:"string"}},step:{defaultValue:null,description:"The number of minutes between options. The minimum is 1 minute and the default is 30 minutes.",name:"step",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Event handler will be triggered when the time-picker value changes",name:"onChange",required:!1,type:{name:"(((this: HTMLInputElement, event: Event) => void) & ChangeEventHandler<HTMLInputElement>)"}}}}}catch{}try{timepicker.displayName="timepicker",timepicker.__docgenInfo={description:"A time picker helps users select a specific time.",displayName:"timepicker",props:{id:{defaultValue:null,description:"The unique identifier for the input",name:"id",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"The name of the input",name:"name",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"A boolean indicating whether or not the field is required",name:"required",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label text to display with the input",name:"label",required:!1,type:{name:"string"}},helperText:{defaultValue:null,description:"Helper text to display with the input",name:"helperText",required:!1,type:{name:"string"}},errors:{defaultValue:null,description:"An array of string error messages",name:"errors",required:!1,type:{name:"string | string[]"}},filter:{defaultValue:null,description:"The time picker will use this regular expression to filter the time picker options.",name:"filter",required:!1,type:{name:"string"}},minTime:{defaultValue:null,description:"The start time used in the time picker in hh:mm 24-hour format. The default is 00:00.",name:"minTime",required:!1,type:{name:"string"}},maxTime:{defaultValue:null,description:"The end time used for the time picker in hh:mm 24-hour format. The default is 23:59.",name:"maxTime",required:!1,type:{name:"string"}},step:{defaultValue:null,description:"The number of minutes between options. The minimum is 1 minute and the default is 30 minutes.",name:"step",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Event handler will be triggered when the time-picker value changes",name:"onChange",required:!1,type:{name:"(((this: HTMLInputElement, event: Event) => void) & ChangeEventHandler<HTMLInputElement>)"}}}}}catch{}export{N as T};
