import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{r as b}from"./iframe-C4vNGh7L.js";const n=({id:a,children:s})=>e.jsx("div",{id:a,children:s}),l=({id:a,defaultTabId:s,children:i,className:d})=>{const[o,p]=b.useState(s),c=i.filter(t=>t.props.id===o),u=t=>{p(t)};return e.jsxs("div",{id:a,className:`tabs ${d}`,children:[e.jsx("ul",{children:i.map(t=>e.jsx("li",{children:e.jsx("button",{onClick:()=>u(t.props.id),className:`text-base-dark ${t.props.id===o?"tabs-active":""}`,children:t.props.label})},`tab-${t.props.id}`))}),e.jsx(n,{...c[0]?.props})]})};try{n.displayName="TabPanel",n.__docgenInfo={description:"",displayName:"TabPanel",props:{id:{defaultValue:null,description:"The unique identifier for the tab panel",name:"id",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"The label value for the tab panel",name:"label",required:!0,type:{name:"string"}},children:{defaultValue:null,description:"The contents of the button",name:"children",required:!0,type:{name:"ReactNode"}}}}}catch{}try{l.displayName="Tabs",l.__docgenInfo={description:"Used to organize and allow navigation between groups of content.",displayName:"Tabs",props:{id:{defaultValue:null,description:"The unique identifier for this component",name:"id",required:!0,type:{name:"string"}},defaultTabId:{defaultValue:null,description:"The id of a tab panel to show by default",name:"defaultTabId",required:!0,type:{name:"string"}},children:{defaultValue:null,description:"An array of child tab panels",name:"children",required:!0,type:{name:"ReactElement<TabPanelProps, string | JSXElementConstructor<any>>[]"}},className:{defaultValue:null,description:"A custom class to apply to the component",name:"className",required:!1,type:{name:"string"}}}}}catch{}try{tabs.displayName="tabs",tabs.__docgenInfo={description:"Used to organize and allow navigation between groups of content.",displayName:"tabs",props:{id:{defaultValue:null,description:"The unique identifier for this component",name:"id",required:!0,type:{name:"string"}},defaultTabId:{defaultValue:null,description:"The id of a tab panel to show by default",name:"defaultTabId",required:!0,type:{name:"string"}},children:{defaultValue:null,description:"An array of child tab panels",name:"children",required:!0,type:{name:"ReactElement<TabPanelProps, string | JSXElementConstructor<any>>[]"}},className:{defaultValue:null,description:"A custom class to apply to the component",name:"className",required:!1,type:{name:"string"}}}}}catch{}const T={title:"Extras/Tabs",component:l},r={args:{id:"tab1",defaultTabId:"tabPanel1"},render:a=>e.jsxs(l,{...a,children:[e.jsx(n,{id:"tabPanel1",label:"Tab 1",children:e.jsx("p",{children:"Content of Tab 1"})}),e.jsx(n,{id:"tabPanel2",label:"Tab 2",children:e.jsx("p",{children:"Content of Tab 2"})}),e.jsx(n,{id:"tabPanel3",label:"Tab 3",children:e.jsx("p",{children:"Content of Tab 3"})})]})};r.parameters={...r.parameters,docs:{...r.parameters?.docs,source:{originalSource:`{
  args: {
    id: 'tab1',
    defaultTabId: 'tabPanel1'
  },
  render: (args: TabsProps) => <Tabs {...args}>
      <TabPanel id="tabPanel1" label="Tab 1">
        <p>Content of Tab 1</p>
      </TabPanel>
      <TabPanel id="tabPanel2" label="Tab 2">
        <p>Content of Tab 2</p>
      </TabPanel>
      <TabPanel id="tabPanel3" label="Tab 3">
        <p>Content of Tab 3</p>
      </TabPanel>
    </Tabs>
}`,...r.parameters?.docs?.source}}};const h=["Default"];export{r as Default,h as __namedExportsOrder,T as default};
