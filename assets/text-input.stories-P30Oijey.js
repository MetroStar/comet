import{j as v}from"./jsx-runtime-D_zvdyIk.js";import{T as k}from"./table-BgJRHwgd.js";import"./banner-D44RDCa6.js";import"./button-CmQiXBCL.js";import"./button-group-CcJGRXhz.js";import"./checkbox-D2z6ybSw.js";import"./combo-box-C6y_HcZ0.js";import"./date-picker-B1XY3L9C.js";import"./error-messages-pdO9TZPZ.js";import"./index-DecsTZxz.js";import"./form-group-B8SfswI0.js";import"./helper-text-BRA2CuHl.js";import{I as j}from"./icon-BbMv88DW.js";import"./label-0qqEdO1f.js";import"./modal-DKP8gnHv.js";import"./process-list-2bfgjVe7.js";import"./radio-button-aIa52GO8.js";import"./range-slider-gJJjeEhr.js";import"./search-BJT-p6La.js";import"./select-ekXRPwHS.js";import"./side-navigation-DDx8EY_w.js";import"./site-alert-DzeFepEJ.js";import"./step-indicator-Dd0Qvd0h.js";import"./summary-box-BaVZEZND.js";import"./tag-D3FfIG8L.js";import"./text-area-BX3MCFwo.js";import"./time-picker-OJP_-aQf.js";import"./tooltip-tfodXPAG.js";import"./index-BCLu61py.js";import"./iframe-DGHArgJO.js";import"./index-CiJQEFXw.js";import"./config-ODXtjL5r.js";import"./select-or-matches-DM7yTSmT.js";import"./events-CleOcHg4.js";import"./sanitizer-BDKKlE4O.js";import"./index-BPUyFTct.js";import"./is-in-viewport-ChIQrv3L.js";import"./sprite-Cw9lcZJJ.js";import"./index-B4TndA0W.js";import"./active-element-BuxAly_Z.js";const gr={title:"USWDS/Forms/Text Input",component:k,argTypes:{mask:{control:"select"},validationStatus:{control:"select",options:["error","success"]},required:{control:"boolean"},disabled:{control:"boolean"}}},r=i=>v.jsx(k,{...i}),t=r.bind({});t.args={id:"input-standard",type:"text",required:!1,label:"Input",helperText:"Enter your input",disabled:!1};const e=r.bind({});e.args={id:"input-errors",type:"text",required:!0,label:"Input",helperText:"Enter your input",errors:"This field is required",validationStatus:"error"};const o=r.bind({});o.args={id:"input-mask",type:"text",mask:"ssn"};const s=r.bind({});s.args={id:"input-prefix",type:"text",prefix:v.jsx(j,{id:"credit-card-icon",type:"credit_card"}),"aria-label":"Input credit card"};const a=r.bind({});a.args={id:"input-suffix",type:"number",suffix:"lbs","aria-label":"Input pounds"};const p=r.bind({});p.args={id:"input-change-event",type:"text",placeholder:"Will alert on change...",onChange:i=>alert(i.target.value)};var n,m,c;t.parameters={...t.parameters,docs:{...(n=t.parameters)==null?void 0:n.docs,source:{originalSource:"(args: TextInputProps) => <TextInput {...args} />",...(c=(m=t.parameters)==null?void 0:m.docs)==null?void 0:c.source}}};var u,d,l;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:"(args: TextInputProps) => <TextInput {...args} />",...(l=(d=e.parameters)==null?void 0:d.docs)==null?void 0:l.source}}};var x,g,I;o.parameters={...o.parameters,docs:{...(x=o.parameters)==null?void 0:x.docs,source:{originalSource:"(args: TextInputProps) => <TextInput {...args} />",...(I=(g=o.parameters)==null?void 0:g.docs)==null?void 0:I.source}}};var T,f,h;s.parameters={...s.parameters,docs:{...(T=s.parameters)==null?void 0:T.docs,source:{originalSource:"(args: TextInputProps) => <TextInput {...args} />",...(h=(f=s.parameters)==null?void 0:f.docs)==null?void 0:h.source}}};var b,S,W;a.parameters={...a.parameters,docs:{...(b=a.parameters)==null?void 0:b.docs,source:{originalSource:"(args: TextInputProps) => <TextInput {...args} />",...(W=(S=a.parameters)==null?void 0:S.docs)==null?void 0:W.source}}};var y,E,P;p.parameters={...p.parameters,docs:{...(y=p.parameters)==null?void 0:y.docs,source:{originalSource:"(args: TextInputProps) => <TextInput {...args} />",...(P=(E=p.parameters)==null?void 0:E.docs)==null?void 0:P.source}}};const Ir=["Standard","WithErrors","WithMask","WithPrefix","WithSuffix","WithChangeEvent"];export{t as Standard,p as WithChangeEvent,e as WithErrors,o as WithMask,s as WithPrefix,a as WithSuffix,Ir as __namedExportsOrder,gr as default};
