import{j as n}from"./jsx-runtime-Bxcv0yjW.js";import{T as m}from"./index-7fqIqhJp.js";import"./banner-BJhXbo0G.js";import"./button-C7jSf2q9.js";import"./button-group-Jm6xw3dW.js";import"./checkbox-BgSfkD1b.js";import"./combo-box-CUbBz0lI.js";import"./date-picker-XqHhEUeu.js";import"./error-messages-B09LlTSG.js";import"./file-input-C95zLMsl.js";import"./text-area-l_ftFS6N.js";import"./helper-text-BGGx8P4c.js";import{I as k}from"./icon-DFsnYnhx.js";import"./label-aifmuN2d.js";import"./modal-OPWcKFuw.js";import"./process-list-CA9hh0io.js";import"./radio-button-DR-9EzpA.js";import"./range-slider-115ORala.js";import"./search-DIodcva8.js";import"./select-UUhm4jv0.js";import"./side-navigation-C1wTXBlT.js";import"./site-alert-BiYBHMCS.js";import"./step-indicator-DL-d1Rw4.js";import"./summary-box-BROm9rVe.js";import"./tag-Dg5v4hiQ.js";import"./tooltip-DTI4gMmd.js";import"./index-mfbfsM12.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-Bl6ORisp.js";import"./config-BXli1stc.js";import"./select-or-matches-Bu-g4rUn.js";import"./sprite-Cw9lcZJJ.js";import"./events-C6LRLXdn.js";import"./sanitizer-BtXph-xc.js";import"./index-D6IA0wpC.js";import"./is-in-viewport-B5ZZJcwh.js";import"./active-element-CTMAq7ve.js";const lr={title:"USWDS/Forms/Text Input",component:m,argTypes:{mask:{control:"select"},validationStatus:{control:"select",options:["error","success"]},required:{control:"boolean"},disabled:{control:"boolean"}}},p=r=>n.jsx(m,{...r}),t=p.bind({});t.args={id:"input-standard",type:"text",required:!1,label:"Input",helperText:"Enter your input",disabled:!1};const q=r=>n.jsx("div",{className:"padding-left-1",children:n.jsx(m,{...r})}),e=q.bind({});e.args={id:"input-errors",type:"text",required:!0,label:"Input",helperText:"Enter your input",errors:"This field is required",validationStatus:"error"};const o=p.bind({});o.args={id:"input-mask",type:"text",mask:"ssn"};const s=p.bind({});s.args={id:"input-prefix",type:"text",prefix:n.jsx(k,{id:"credit-card-icon",type:"credit_card"}),"aria-label":"Input credit card"};const a=p.bind({});a.args={id:"input-suffix",type:"number",suffix:"lbs","aria-label":"Input pounds"};const i=p.bind({});i.args={id:"input-change-event",type:"text",placeholder:"Will alert on change...",onChange:r=>alert(r.target.value)};var c,d,u;t.parameters={...t.parameters,docs:{...(c=t.parameters)==null?void 0:c.docs,source:{originalSource:"(args: TextInputProps) => <TextInput {...args} />",...(u=(d=t.parameters)==null?void 0:d.docs)==null?void 0:u.source}}};var l,x,g;e.parameters={...e.parameters,docs:{...(l=e.parameters)==null?void 0:l.docs,source:{originalSource:`(args: TextInputProps) => <div className="padding-left-1">
    <TextInput {...args} />
  </div>`,...(g=(x=e.parameters)==null?void 0:x.docs)==null?void 0:g.source}}};var f,T,h;o.parameters={...o.parameters,docs:{...(f=o.parameters)==null?void 0:f.docs,source:{originalSource:"(args: TextInputProps) => <TextInput {...args} />",...(h=(T=o.parameters)==null?void 0:T.docs)==null?void 0:h.source}}};var I,b,S;s.parameters={...s.parameters,docs:{...(I=s.parameters)==null?void 0:I.docs,source:{originalSource:"(args: TextInputProps) => <TextInput {...args} />",...(S=(b=s.parameters)==null?void 0:b.docs)==null?void 0:S.source}}};var W,y,v;a.parameters={...a.parameters,docs:{...(W=a.parameters)==null?void 0:W.docs,source:{originalSource:"(args: TextInputProps) => <TextInput {...args} />",...(v=(y=a.parameters)==null?void 0:y.docs)==null?void 0:v.source}}};var E,P,j;i.parameters={...i.parameters,docs:{...(E=i.parameters)==null?void 0:E.docs,source:{originalSource:"(args: TextInputProps) => <TextInput {...args} />",...(j=(P=i.parameters)==null?void 0:P.docs)==null?void 0:j.source}}};const xr=["Standard","WithErrors","WithMask","WithPrefix","WithSuffix","WithChangeEvent"];export{t as Standard,i as WithChangeEvent,e as WithErrors,o as WithMask,s as WithPrefix,a as WithSuffix,xr as __namedExportsOrder,lr as default};
