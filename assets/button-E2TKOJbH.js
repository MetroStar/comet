import{j as l}from"./jsx-runtime-CKrituN3.js";import{c as i}from"./index-Bl6ORisp.js";const r=({id:t,type:a="button",variant:e="default",className:n,children:s,...u})=>{const o=i("usa-button",{"usa-button--secondary":e==="secondary","usa-button--accent-cool":e==="accent-cool","usa-button--accent-warm":e==="accent-warm","usa-button--base":e==="base","usa-button--outline":e==="outline","usa-button--outline usa-button--inverse":e==="outline-inverse","usa-button--big":e==="big","usa-button--unstyled":e==="unstyled"},n);return l.jsx("button",{id:t,type:a,className:o,"data-testid":"button",...u,children:s})};r.__docgenInfo={description:"A button draws attention to important actions with a large selectable surface.",methods:[],displayName:"Button",props:{id:{required:!0,tsType:{name:"string"},description:"The unique identifier for this component"},type:{required:!1,tsType:{name:"union",raw:"'button' | 'submit' | 'reset'",elements:[{name:"literal",value:"'button'"},{name:"literal",value:"'submit'"},{name:"literal",value:"'reset'"}]},description:"The type of button to display",defaultValue:{value:"'button'",computed:!1}},variant:{required:!1,tsType:{name:"union",raw:`| 'default'
| 'secondary'
| 'accent-cool'
| 'accent-warm'
| 'base'
| 'outline'
| 'outline-inverse'
| 'big'
| 'unstyled'`,elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'secondary'"},{name:"literal",value:"'accent-cool'"},{name:"literal",value:"'accent-warm'"},{name:"literal",value:"'base'"},{name:"literal",value:"'outline'"},{name:"literal",value:"'outline-inverse'"},{name:"literal",value:"'big'"},{name:"literal",value:"'unstyled'"}]},description:"The style variant of button to display",defaultValue:{value:"'default'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:"A custom class to apply to the component"},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(param: SyntheticEvent) => void",signature:{arguments:[{type:{name:"SyntheticEvent"},name:"param"}],return:{name:"void"}}},description:"Custom callback for when button is clicked"},children:{required:!1,tsType:{name:"ReactNode"},description:"The contents of the button"}}};export{r as B};
