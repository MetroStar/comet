import{j as l}from"./jsx-runtime-D_zvdyIk.js";import{c as h}from"./index-BVkfGhKT.js";import{F as y}from"./form-group-DRHOEtVf.js";const a=({id:e,defaultOption:t={value:"",label:"- Select -"},options:n,required:s,label:u,helperText:p,errors:d,onChange:c,className:m,children:r,...f})=>!r&&!n?l.jsx(l.Fragment,{}):l.jsx(y,{id:`form-group-${e}`,required:s,label:u,helperText:p,errors:d,fieldControl:l.jsxs("select",{id:e,className:h("usa-select",m),defaultValue:t?.value,onChange:c,...f,children:[o(t,-1),r??n?.map(o)]})}),i=({value:e,label:t})=>l.jsx("option",{value:e,children:t}),o=(e,t)=>e&&l.jsx("option",{value:e.value,children:e.label},t);try{a.displayName="Select",a.__docgenInfo={description:"A select component allows users to choose one option from a temporary modal menu.",displayName:"Select",props:{id:{defaultValue:null,description:"The unique identifier for the select",name:"id",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"The name of the select",name:"name",required:!1,type:{name:"string"}},defaultOption:{defaultValue:{value:"{ value: '', label: '- Select -' }"},description:"The default option of the select",name:"defaultOption",required:!1,type:{name:"SelectOptionProps | null"}},options:{defaultValue:null,description:"The options of the select",name:"options",required:!1,type:{name:"SelectOptionProps[]"}},required:{defaultValue:null,description:"A boolean indicating whether or not the field is required",name:"required",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label text to display with the input",name:"label",required:!1,type:{name:"string"}},helperText:{defaultValue:null,description:"Helper text to display with the input",name:"helperText",required:!1,type:{name:"string"}},errors:{defaultValue:null,description:"An array of string error messages",name:"errors",required:!1,type:{name:"string | string[]"}},children:{defaultValue:null,description:"SelectOption components to display as children",name:"children",required:!1,type:{name:"((ReactElement<SelectOptionProps, string | JSXElementConstructor<any>> | ReactElement<SelectOptionProps, string | JSXElementConstructor<...>>[]) & (string | ... 7 more ... | null))"}},onChange:{defaultValue:null,description:"Event handler for when value of the select is changed",name:"onChange",required:!1,type:{name:"ChangeEventHandler<HTMLSelectElement>"}}}}}catch{}try{i.displayName="SelectOption",i.__docgenInfo={description:"",displayName:"SelectOption",props:{value:{defaultValue:null,description:"The value for the option",name:"value",required:!0,type:{name:"string | number | readonly string[]"}},label:{defaultValue:null,description:"The label for the option",name:"label",required:!0,type:{name:"string"}}}}}catch{}try{select.displayName="select",select.__docgenInfo={description:"A select component allows users to choose one option from a temporary modal menu.",displayName:"select",props:{id:{defaultValue:null,description:"The unique identifier for the select",name:"id",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"The name of the select",name:"name",required:!1,type:{name:"string"}},defaultOption:{defaultValue:{value:"{ value: '', label: '- Select -' }"},description:"The default option of the select",name:"defaultOption",required:!1,type:{name:"SelectOptionProps | null"}},options:{defaultValue:null,description:"The options of the select",name:"options",required:!1,type:{name:"SelectOptionProps[]"}},required:{defaultValue:null,description:"A boolean indicating whether or not the field is required",name:"required",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label text to display with the input",name:"label",required:!1,type:{name:"string"}},helperText:{defaultValue:null,description:"Helper text to display with the input",name:"helperText",required:!1,type:{name:"string"}},errors:{defaultValue:null,description:"An array of string error messages",name:"errors",required:!1,type:{name:"string | string[]"}},children:{defaultValue:null,description:"SelectOption components to display as children",name:"children",required:!1,type:{name:"((ReactElement<SelectOptionProps, string | JSXElementConstructor<any>> | ReactElement<SelectOptionProps, string | JSXElementConstructor<...>>[]) & (string | ... 7 more ... | null))"}},onChange:{defaultValue:null,description:"Event handler for when value of the select is changed",name:"onChange",required:!1,type:{name:"ChangeEventHandler<HTMLSelectElement>"}}}}}catch{}export{a as S,i as a,o as c};
