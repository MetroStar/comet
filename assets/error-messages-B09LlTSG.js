import{j as r}from"./jsx-runtime-Bxcv0yjW.js";const i=({id:s=void 0,errors:e,children:a})=>!a&&!e?r.jsx(r.Fragment,{}):(typeof e=="string"&&(e=[e]),r.jsx(r.Fragment,{children:a??(e==null?void 0:e.map((n,t)=>r.jsx("span",{id:`${s}-${t}`,className:"usa-error-message",children:n},t)))}));try{i.displayName="ErrorMessages",i.__docgenInfo={description:"Outputs a list of error messages as HTML.",displayName:"ErrorMessages",props:{id:{defaultValue:{value:"undefined"},description:"The unique identifier for this component",name:"id",required:!1,type:{name:"string"}},errors:{defaultValue:null,description:"An array of error strings to display",name:"errors",required:!1,type:{name:"string | string[]"}},children:{defaultValue:null,description:"ReactNode components to display as children",name:"children",required:!1,type:{name:"ReactNode"}}}}}catch{}try{errormessages.displayName="errormessages",errormessages.__docgenInfo={description:"Outputs a list of error messages as HTML.",displayName:"errormessages",props:{id:{defaultValue:{value:"undefined"},description:"The unique identifier for this component",name:"id",required:!1,type:{name:"string"}},errors:{defaultValue:null,description:"An array of error strings to display",name:"errors",required:!1,type:{name:"string | string[]"}},children:{defaultValue:null,description:"ReactNode components to display as children",name:"children",required:!1,type:{name:"ReactNode"}}}}}catch{}export{i as E};
