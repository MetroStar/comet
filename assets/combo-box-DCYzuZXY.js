import{j}from"./jsx-runtime-CKrituN3.js";import{S as at}from"./select-DO6-i82j.js";import{g as rt}from"./_commonjsHelpers-BosuxZz1.js";import{k as ct}from"./index-D6IA0wpC.js";import{s as ut}from"./select-or-matches-Bu-g4rUn.js";import{b as dt,c as pt}from"./config-BXli1stc.js";import{s as ft}from"./sanitizer-BtXph-xc.js";import{e as bt}from"./events-C6LRLXdn.js";import{r as k}from"./index-CBqU2yxZ.js";const N=ct,mt=ut,Et=dt,V=ft,{prefix:ht}=pt,{CLICK:St}=bt,b=`${ht}-combo-box`,O=`${b}--pristine`,J=`${b}__select`,Q=`${b}__input`,F=`${b}__clear-input`,Tt=`${F}__wrapper`,At=`${b}__input-button-separator`,D=`${b}__toggle-list`,Lt=`${D}__wrapper`,Y=`${b}__list`,I=`${b}__list-option`,_=`${I}--focused`,Z=`${I}--selected`,tt=`${b}__status`,A=`.${b}`,gt=`.${J}`,w=`.${Q}`,et=`.${F}`,st=`.${D}`,_t=`.${Y}`,P=`.${I}`,ot=`.${_}`,xt=`.${Z}`,Ot=`.${tt}`,$t=".*{{query}}.*",vt=()=>{},h=(s,t="")=>{const e=s;e.value=t;const o=new CustomEvent("change",{bubbles:!0,cancelable:!0,detail:{value:t}});e.dispatchEvent(o)},c=s=>{const t=s.closest(A);if(!t)throw new Error(`Element is missing outer ${A}`);const e=t.querySelector(gt),o=t.querySelector(w),n=t.querySelector(_t),i=t.querySelector(Ot),a=t.querySelector(ot),r=t.querySelector(xt),l=t.querySelector(st),f=t.querySelector(et),m=t.classList.contains(O),S=t.dataset.disableFiltering==="true";return{comboBoxEl:t,selectEl:e,inputEl:o,listEl:n,statusEl:i,focusedOptionEl:a,selectedOptionEl:r,toggleListBtnEl:l,clearInputBtnEl:f,isPristine:m,disableFiltering:S}},nt=s=>{const{inputEl:t,toggleListBtnEl:e,clearInputBtnEl:o}=c(s);o.hidden=!0,o.disabled=!0,e.disabled=!0,t.disabled=!0},Ct=s=>{const{inputEl:t,toggleListBtnEl:e,clearInputBtnEl:o}=c(s);o.hidden=!0,o.setAttribute("aria-disabled",!0),e.setAttribute("aria-disabled",!0),t.setAttribute("aria-disabled",!0)},It=s=>{const{inputEl:t,toggleListBtnEl:e,clearInputBtnEl:o}=c(s);o.hidden=!1,o.disabled=!1,e.disabled=!1,t.disabled=!1},G=s=>{const t=s.closest(A);if(t.dataset.enhanced)return;const e=t.querySelector("select");if(!e)throw new Error(`${A} is missing inner select`);const o=e.id,n=document.querySelector(`label[for="${o}"]`),i=`${o}--list`,a=`${o}-label`,r=`${o}--assistiveHint`,l=[],{defaultValue:f}=t.dataset,{placeholder:m}=t.dataset;let S;if(m&&l.push({placeholder:m}),f)for(let u=0,p=e.options.length;u<p;u+=1){const T=e.options[u];if(T.value===f){S=T;break}}if(!n||!n.matches(`label[for="${o}"]`))throw new Error(`${A} for ${o} is either missing a label or a "for" attribute`);n.setAttribute("id",a),n.setAttribute("id",a),e.setAttribute("aria-hidden","true"),e.setAttribute("tabindex","-1"),e.classList.add("usa-sr-only",J),e.id="",e.value="",["required","aria-label","aria-labelledby"].forEach(u=>{if(e.hasAttribute(u)){const p=e.getAttribute(u);l.push({[u]:p}),e.removeAttribute(u)}});const d=document.createElement("input");if(d.setAttribute("id",o),d.setAttribute("aria-owns",i),d.setAttribute("aria-controls",i),d.setAttribute("aria-autocomplete","list"),d.setAttribute("aria-describedby",r),d.setAttribute("aria-expanded","false"),d.setAttribute("autocapitalize","off"),d.setAttribute("autocomplete","off"),d.setAttribute("class",Q),d.setAttribute("type","text"),d.setAttribute("role","combobox"),l.forEach(u=>Object.keys(u).forEach(p=>{const T=V.escapeHTML`${u[p]}`;d.setAttribute(p,T)})),t.insertAdjacentElement("beforeend",d),t.insertAdjacentHTML("beforeend",V.escapeHTML`
    <span class="${Tt}" tabindex="-1">
        <button type="button" class="${F}" aria-label="Clear the select contents">&nbsp;</button>
      </span>
      <span class="${At}">&nbsp;</span>
      <span class="${Lt}" tabindex="-1">
        <button type="button" tabindex="-1" class="${D}" aria-label="Toggle the dropdown list">&nbsp;</button>
      </span>
      <ul
        tabindex="-1"
        id="${i}"
        class="${Y}"
        role="listbox"
        aria-labelledby="${a}"
        hidden>
      </ul>
      <div class="${tt} usa-sr-only" role="status"></div>
      <span id="${r}" class="usa-sr-only">
        When autocomplete results are available use up and down arrows to review and enter to select.
        Touch device users, explore by touch or with swipe gestures.
      </span>`),S){const{inputEl:u}=c(t);h(e,S.value),h(u,S.text),t.classList.add(O)}e.disabled&&(nt(t),e.disabled=!1),e.hasAttribute("aria-disabled")&&(Ct(t),e.removeAttribute("aria-disabled")),t.dataset.enhanced="true"},y=(s,t,{skipFocus:e,preventScroll:o}={})=>{const{inputEl:n,listEl:i,focusedOptionEl:a}=c(s);if(a&&(a.classList.remove(_),a.setAttribute("tabIndex","-1")),t){if(n.setAttribute("aria-activedescendant",t.id),t.setAttribute("tabIndex","0"),t.classList.add(_),!o){const r=t.offsetTop+t.offsetHeight,l=i.scrollTop+i.offsetHeight;r>l&&(i.scrollTop=r-i.offsetHeight),t.offsetTop<i.scrollTop&&(i.scrollTop=t.offsetTop)}e||t.focus({preventScroll:o})}else n.setAttribute("aria-activedescendant",""),n.focus()},it=(s,t="",e={})=>{const o=i=>i.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&");let n=s.replace(/{{(.*?)}}/g,(i,a)=>{const r=a.trim(),l=e[r];if(r!=="query"&&l){const f=new RegExp(l,"i"),m=t.match(f);return m?o(m[1]):""}return o(t)});return n=`^(?:${n})$`,new RegExp(n,"i")},v=s=>{const{comboBoxEl:t,selectEl:e,inputEl:o,listEl:n,statusEl:i,isPristine:a,disableFiltering:r}=c(s);let l,f;const m=`${n.id}--option-`,S=(o.value||"").toLowerCase(),d=t.dataset.filter||$t,u=it(d,S,t.dataset),p=[];for(let L=0,C=e.options.length;L<C;L+=1){const g=e.options[L],$=`${m}${p.length}`;g.value&&(r||a||!S||u.test(g.text))&&(e.value&&g.value===e.value&&(l=$),r&&!f&&u.test(g.text)&&(f=$),p.push(g))}const T=p.length,lt=p.map((L,C)=>{const g=`${m}${C}`,$=[I];let q="-1",M="false";g===l&&($.push(Z,_),q="0",M="true"),!l&&C===0&&($.push(_),q="0");const E=document.createElement("li");return E.setAttribute("aria-setsize",p.length),E.setAttribute("aria-posinset",C+1),E.setAttribute("aria-selected",M),E.setAttribute("id",g),E.setAttribute("class",$.join(" ")),E.setAttribute("tabindex",q),E.setAttribute("role","option"),E.setAttribute("data-value",L.value),E.textContent=L.text,E}),R=document.createElement("li");R.setAttribute("class",`${I}--no-results`),R.textContent="No results found",n.hidden=!1,T?(n.innerHTML="",lt.forEach(L=>n.insertAdjacentElement("beforeend",L))):(n.innerHTML="",n.insertAdjacentElement("beforeend",R)),o.setAttribute("aria-expanded","true"),i.textContent=T?`${T} result${T>1?"s":""} available.`:"No results.";let B;a&&l?B=n.querySelector(`#${l}`):r&&f&&(B=n.querySelector(`#${f}`)),B&&y(n,B,{skipFocus:!0})},x=s=>{const{inputEl:t,listEl:e,statusEl:o,focusedOptionEl:n}=c(s);o.innerHTML="",t.setAttribute("aria-expanded","false"),t.setAttribute("aria-activedescendant",""),n&&n.classList.remove(_),e.scrollTop=0,e.hidden=!0},U=s=>{const{comboBoxEl:t,selectEl:e,inputEl:o}=c(s);h(e,s.dataset.value),h(o,s.textContent),t.classList.add(O),x(t),o.focus()},yt=s=>{const{comboBoxEl:t,listEl:e,selectEl:o,inputEl:n}=c(s),i=!e.hidden;o.value&&h(o),n.value&&h(n),t.classList.remove(O),i&&v(t),n.focus()},H=s=>{const{comboBoxEl:t,selectEl:e,inputEl:o}=c(s),n=e.value,i=(o.value||"").toLowerCase();if(n)for(let a=0,r=e.options.length;a<r;a+=1){const l=e.options[a];if(l.value===n){i!==l.text&&h(o,l.text),t.classList.add(O);return}}i&&h(o)},Bt=s=>{const{comboBoxEl:t,selectEl:e,inputEl:o,statusEl:n}=c(s);n.textContent="";const i=(o.value||"").toLowerCase();if(i)for(let a=0,r=e.options.length;a<r;a+=1){const l=e.options[a];if(l.text.toLowerCase()===i){h(e,l.value),h(o,l.text),t.classList.add(O);return}}H(t)},wt=s=>{const{comboBoxEl:t,inputEl:e}=c(s.target);x(t),H(t),e.focus()},z=s=>{const{comboBoxEl:t,listEl:e}=c(s.target);e.hidden&&v(t);const o=e.querySelector(ot)||e.querySelector(P);o&&y(t,o),s.preventDefault()},Pt=s=>{const{comboBoxEl:t,listEl:e}=c(s.target),o=!e.hidden;Bt(t),o&&x(t),s.preventDefault()},X=s=>{const t=s.target,e=t.nextSibling;e&&y(t,e),s.preventDefault()},Rt=s=>{U(s.target),s.preventDefault()},qt=s=>{U(s.target),s.preventDefault()},W=s=>{const{comboBoxEl:t,listEl:e,focusedOptionEl:o}=c(s.target),n=o&&o.previousSibling,i=!e.hidden;y(t,n),i&&s.preventDefault(),n||x(t)},Nt=s=>{s.classList.contains(_)||y(s,s,{preventScroll:!0})},Ft=s=>{const{comboBoxEl:t,listEl:e,inputEl:o}=c(s);e.hidden?v(t):x(t),o.focus()},Dt=s=>{const{comboBoxEl:t,listEl:e}=c(s);e.hidden&&v(t)},Ut=Et({[St]:{[w](){this.disabled||Dt(this)},[st](){this.disabled||Ft(this)},[P](){this.disabled||U(this)},[et](){this.disabled||yt(this)}},focusout:{[A](s){this.contains(s.relatedTarget)||(H(this),x(this))}},keydown:{[A]:N({Escape:wt}),[w]:N({Enter:Pt,ArrowDown:z,Down:z}),[P]:N({ArrowUp:W,Up:W,ArrowDown:X,Down:X,Enter:qt," ":Rt,"Shift+Tab":vt})},input:{[w](){this.closest(A).classList.remove(O),v(this)}},mouseover:{[P](){Nt(this)}}},{init(s){mt(A,s).forEach(t=>{G(t)})},getComboBoxContext:c,enhanceComboBox:G,generateDynamicRegExp:it,disable:nt,enable:It,displayList:v,hideList:x,COMBO_BOX_CLASS:b});var Ht=Ut;const K=rt(Ht),Mt=({placeholder:s,...t})=>{const e=k.useRef(null);k.useLayoutEffect(()=>{const n=e.current;return K.on(n),()=>K.off(n)});const o={className:"usa-combo-box",ref:e};return s&&(o["data-placeholder"]=s),t.defaultValue&&(o["data-default-value"]=t.defaultValue),j.jsx("div",{...o,children:j.jsx(at,{...t})})};Mt.__docgenInfo={description:"A combo box helps users select an item from a large list of options.",methods:[],displayName:"ComboBox",props:{id:{required:!0,tsType:{name:"string"},description:"The unique identifier for this component"},name:{required:!1,tsType:{name:"string"},description:"The name for the combo box input field"},placeholder:{required:!1,tsType:{name:"string"},description:"The placeholder value to display in the control"},defaultOption:{required:!1,tsType:{name:"union",raw:"SelectOptionProps | null",elements:[{name:"SelectOptionProps"},{name:"null"}]},description:"The default option of the select"},options:{required:!1,tsType:{name:"Array",elements:[{name:"SelectOptionProps"}],raw:"SelectOptionProps[]"},description:"The options of the select"},children:{required:!1,tsType:{name:"union",raw:"ReactElement<SelectOptionProps> | Array<ReactElement<SelectOptionProps>>",elements:[{name:"ReactElement",elements:[{name:"SelectOptionProps"}],raw:"ReactElement<SelectOptionProps>"},{name:"Array",elements:[{name:"ReactElement",elements:[{name:"SelectOptionProps"}],raw:"ReactElement<SelectOptionProps>"}],raw:"Array<ReactElement<SelectOptionProps>>"}]},description:"SelectOption components to display as children"},onChange:{required:!1,tsType:{name:"ChangeEventHandler",elements:[{name:"HTMLSelectElement"}],raw:"ChangeEventHandler<HTMLSelectElement>"},description:"Event handler for when value of the select is changed"}}};export{Mt as C,K as c,Ht as s};
